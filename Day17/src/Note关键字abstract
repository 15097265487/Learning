 * 	abstract:关键字的使用
 * 		1.abstract:抽象的
 * 		2.abstract:可以用来修饰的结构。类、方法
 * 		3.abstract修饰类：抽象类
 * 			抽象类不可以实例化
 * 			抽象类可以被继承，
 * 			抽象类也可以继承其他类
 * 			抽象类中一定有构造器，便于子类实例化时调用
 * 			开发时，都会提供抽象的子类，让子类对象实例化完成相关操作
 * 		4.abstract修饰方法：抽象方法
 * 			抽象方法只有方法的声明，没有方法体（大括号）
 * 			抽象方法一定在抽象里
 * 			包含抽象方法的类，一定是抽象类，
 * 			抽象类里面可以没有抽象方法
 * 			若子类重写了父亲中所有的抽象方法，此子类就可以被实例化
 * 			若子类没有重写父类的中的所有抽象方法，此子也是一个抽象类，则需要abstract修饰
 * 
 * 	注意：
 * 		abstract不可以修饰属性、构造方法
 * 		abstract不能用来修饰静态方法、私有方法、final方法
 * 
 * 		（static修饰的方法不可以被重写
 * 		 private修饰的方法也不可以被重写
 * 		 final修饰的方法也不可以被重写
 * 		 final修饰的类不能被继承                       
 * 		 static、private不能用来修饰类
 
  * 	final:最终的
 * 	1.final可以修饰：类、方法、变量（局部变量和成员变量）
 * 	2.final修饰类：
 * 		不能被其他类继承
 * 		String System StringBuffer
 * 	3.final修饰方法：
 * 		用final修饰的方法不能被重写
 * 		Object中getClass
 * 	4.final修饰变量：（变成常量）
 * 		4.1属性(成员变量)：
 * 			可以赋值的位置有三个：
 * 			显示初始化、代码块、构造器中初始化
 * 			只能用一种进行赋值
 * 		4.2局部变量：
 * 			方法体内、方法的形参
 * 			当修饰方法的形参时，表示此形参是一个常量不可修改
 * 			当我们调用此方时，给这个常量形参，一旦赋值之后不可更改，就只能在次方法中使用，但是不能进行重新赋值
 * 
 * 	static final用来修饰属性：全局变量

  	对属性可以赋值的位置
 * 	①默认初始化
 * 	②显示初始化   /  ③在代码块中赋值
 * 	④构造器中初始化
 * 	⑤对象.属性，对象.方法
 * 	
 * 	先后顺序：①--->②/③--->④--->⑤