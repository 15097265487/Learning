oop:Object Oriented Programming
		 * 一、java面向对象学习的三条主线
		 * 	1、java类以及类的成员：属性  方法   构造方法  代码块  内部类
		 * 	2、面向对象的三大特征：
		 * 			封装性、继承性、多态性（抽象性
		 * 	3、其它关键字
		 * 		this super package import static final abstract interface
		 * 
		 * 二、面向过程 面型对象
		 * 	1、面向过程：函数，考虑怎么做
		 * 	2、类/对象，考虑谁来做
		 * 三、面向对象的两个要素
		 * 	类：对一类事物的描述，是抽象的概念上的定义
		 * 	对象：是实际存在的该类事物的每个个体也称之为实例（instance）
		 * 
		 * 	面向对象程序设计最重要的就是类的设计
		 * 	设计类：设计类里面的成员，成员变量 成员方法
		 
 一、设计类 设计类的成员
	 * 	属性   成员变量   field  （ 域，字段）
	 * 	方法 成员方法  method  函数   
	 * 	创建类的对象=类的实例化=实例化类
二、类和对象的使用（）
	 * 	1、创建类 设计类的成员
	 * 	2、创建类的对象
	 * 	3、通过"对象名.属性"对象名.方法名调用对象的属性方法
三、如果创建一个类的多个对象则每个对象都独立的拥一套类的属性
	 *	意味着：如果修改了一个对象的属性a则不影响另一个对象的属性值a的值	
	 
类中属性的使用
	   *（属性）成员变量  vs 局部变量
	 *1、相同点
	 *		定义格式  数据类型  变量名 = 变量值
	 *		先声明  在使用
	 *		变量都有自己的作用域
	 *2、不同点
	 *	 2.1定义的位置不同
	 *		属性：直接定义在类的{}里面
	 *		局部变量：声明在方法内、方法的的参数、代码块、构造器内部的变量									
	 *	 2.2作用范围不一致
	 *		从声明她开始到包含他最近的大括号
	 *	 2.3关于权限修饰符的不同
	 *		public private 缺省   protected
	 *		属性：可以在声明属性时，使用访问权限修饰符指明其权限
	 *		局部变量：不可以加以访问权限修饰符
	 *	 2.4默认初始化的值
	 *		属性：类的属性，根据其类型，都有默认初始值
	 *			整型4个：0
	 *			浮点型2个：0.0
	 *			字符型1个：0
	 *			引用数据类型：null
	 *			boolean:false
	 *		局部变量：没有默认初始化的值
	 *	 2.5在内存中的位置不同
	 *		属性：加载到堆空间中（非static）
	 *		局部变量：加载到栈空间中
	 *
	 *	   属性（成员变量）
	 *		定义在类里面，作用域范围整个类里面
	 *		可以访问权限修饰符  public private 缺省   protected
	 *		有默认初始化值（可以只进行声明）
	 *		在堆空间中（非static）
	 *	 局部变量：
	 *		定义在方法  形参  代码块  构造方法（形参）中
	 *		没有访问权限修饰符
	 *		没有默认值（使用前必须声明+初始化）
	 *		在栈空间	 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 