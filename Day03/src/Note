顺序、分支、循环
	从上到下逐一执行
	根据条件，选择性的执行
		if(条件表达式){
			代码块
		{
	    
	   if(条件表达式){
	   		代码块1
	   }else{
	   		代码块2
	   }
	   
	   if(条件表达式){
	   		代码块1
	   }else{
	   		代码块2
	   		...
	   }else
	   		代码块n
按照while、do...while、for语句执行
	
             *条件表达式必须是布尔表达式（逻辑表达式或关系表达式）、布尔变量
             *语句块只有一条执行语句时，一对{}可以省略，但建议保留
             *当if-else语句结构，根据需要可以嵌套使用
             *当if-else结构是“多选一时”最后的else是可选的，根据需要可以省略
             *当多个条件时“互斥”关系时，条件判断语句及执行语句间顺序无所谓，当多个条件是“包含”关系时，“小上大下/子上父下”
	
程序流程控制：
		分支结构switch--case
		 * 1)格式：
		 * switch(表达式key){
		 * case value1：
		 * 		     语句块；
		 * case value2：
		 * case value3：
		 * ...
		 * defalut:
		 * 		语句块；
		 * }
		 * 2）根据switch表达式key的值，依次匹配各个case后的value
		 *     一旦匹配成功后，则进入相应的case结构中调用其执行语句
		 *     当调用完执行语句后，则任然向下执行直到遇到break，或者switch结构结束
	                   同一个Switch结构中 ，case子句中常量值互不相同
	      defaul是随意的，可有可无。                                              default顾名思义是缺省情况，只有任何条件都不匹配的情况下才会执行，所以应该将default语句放在所有case结束之后
		 *3）switch结构中的表达式只能是如下类型：
		 *		byte  short   char   int  枚举     String
		 *4)key value的类型要一致（或可进行自动转换）
		
循环语句：  while循环、do...while循环、for循环
	while：  
            while( 布尔表达式 ) {
              //循环内容
            }
    do...while：     
            do {
              //代码语句
            }while(布尔表达式);
    for：     
            for(初始化; 布尔表达式; 更新) {
             //代码语句
            }      
          
    